{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is app for user aggregation based on REST API",
        "title": "User Aggregation API",
        "contact": {
            "url": "http://github.com/h4tecancel"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/summary": {
            "get": {
                "description": "Get total cost summary with optional filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "summary"
                ],
                "summary": "Get filtered summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by service name",
                        "name": "service_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user ID (UUID)",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by start date (RFC3339 format)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by end date (RFC3339 format)",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Summary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get all user subscription information records",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List of all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user subscription information record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create new user info",
                "parameters": [
                    {
                        "description": "User subscription information",
                        "name": "userInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get all subscription information for a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user info by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all subscription information for a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user info by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Number of deleted records, but not in json. this will need to be done",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update user subscription information (price and/or end date)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update fields (price and/or end_date)",
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Number of updated records, but not in json, this will need to be done",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorPayload"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.UpdateUserInfo": {
            "description": "User subscription update fields (all fields are optional, except UserID,It does not need to be filled out to submit a request.)",
            "type": "object",
            "properties": {
                "end_date": {
                    "description": "EndDate is the updated subscription end date (optional)",
                    "type": "string"
                },
                "price": {
                    "description": "Price is the updated subscription price (optional, always integer)",
                    "type": "integer"
                },
                "user_id": {
                    "description": "!!! UserID is the unique identifier of the user(not for request! ONLY RESPONSE)",
                    "type": "string"
                }
            }
        },
        "models.UserInfo": {
            "description": "User subscription information with service details and pricing",
            "type": "object",
            "properties": {
                "end_date": {
                    "description": "EndDate is when the subscription ends",
                    "type": "string"
                },
                "price": {
                    "description": "Price is the subscription price (always integer)",
                    "type": "integer"
                },
                "service_name": {
                    "description": "ServiceName is the name of the subscribed service",
                    "type": "string"
                },
                "start_date": {
                    "description": "StartDate is when the subscription begins",
                    "type": "string"
                },
                "user_id": {
                    "description": "UserID is the unique identifier of the user",
                    "type": "string"
                }
            }
        },
        "response.ErrorPayload": {
            "description": "Returned for all non-2xx responses.",
            "type": "object",
            "properties": {
                "error": {
                    "description": "Human-readable error message",
                    "type": "string"
                },
                "op": {
                    "description": "Operation/context where the error occurred (optional)",
                    "type": "string"
                },
                "status": {
                    "description": "HTTP status code (mirrors the response status)",
                    "type": "integer"
                }
            }
        },
        "response.Summary": {
            "description": "Summary response with total cost calculation",
            "type": "object",
            "properties": {
                "total_cost": {
                    "description": "TotalCost is the sum of prices from filtered records",
                    "type": "integer"
                }
            }
        }
    }
}